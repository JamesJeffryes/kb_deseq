/*
A KBase module: kb_deseq
*/

module kb_deseq {

    /* A boolean - 0 for false, 1 for true.
        @range (0, 1)
    */
    typedef int boolean;

    /* An X/Y/Z style reference
    */
    typedef string obj_ref;

    typedef structure {
        string        group_name1;
        list<string>  expr_ids1;
        string        group_name2;
        list<string>  expr_ids2;
    } ExperimentGroupIDsList;

    /*
      required params:
      expressionset_ref: ExpressionSet object reference
      expression_set_name: ExpressionSet object name and output file header
      filtered_expr_matrix: name of output object filtered expression matrix
      workspace_name: the name of the workspace it gets saved to

      fold_scale_type: one of ["linear", "log2+1", "log10+1"]
      alpha_cutoff: q value cutoff


    */
    typedef structure{
        obj_ref expressionset_ref;
        string diff_expression_obj_name;
        string filtered_expr_matrix;
        string workspace_name;

        int num_threads;
        ExperimentGroupIDsList expr_ids_list;      
        string fold_scale_type;
        float alpha_cutoff;
        float fold_change_cutoff;
        int maximum_num_genes;
    } DESeqInput;

    /*
        result_directory: folder path that holds all files generated by run_deseq2
        expression_obj_ref: generated Expression/ExpressionSet object reference
        report_name: report name generated by KBaseReport
        report_ref: report reference generated by KBaseReport
    */
    typedef structure{
        string result_directory;
        obj_ref diff_expression_obj_ref;
        string report_name;
        string report_ref;
    }DESeqResult;

    /*  
        run_deseq2: run DESeq2 app

        ref: https://www.bioconductor.org/packages/release/bioc/vignettes/DESeq2/inst/doc/DESeq2.html
    */
    funcdef run_deseq2(DESeqInput params)
        returns (DESeqResult returnVal) authentication required;
};
